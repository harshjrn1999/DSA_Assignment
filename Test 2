Q1


class Solution:
    def mySqrt(self, x: int) -> int:
        left,right=1,x
        while left<=right:
            mid=(left+right)//2
            if mid*mid==x:
                return mid
            if mid*mid>x:
                right=mid-1
            else:
                left=mid+1
        return right
    
Q2

class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        carry, head = 0, l1
        while l1 or l2:
            if not l1.next and l2: l1.next, l2.next = l2.next, l1.next
            
            val1 = l1.val if l1 else 0
            val2 = l2.val if l2 else 0
            
            carry, l1.val = divmod(val1 + val2 + carry, 10)
            
            prev = l1
            if l1: l1 = l1.next
            if l2: l2 = l2.next
                
        if carry: prev.next = ListNode(carry)
        return head
